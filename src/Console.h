#ifndef CONSOLE_H
#define CONSOLE_H

// ===========================================================================
// Copyright (c) 2017, Electric Power Research Institute (EPRI)
// All rights reserved.
//
// wisund ("this software") is licensed under BSD 3-Clause license.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// *  Redistributions of source code must retain the above copyright notice, this
//    list of conditions and the following disclaimer.
//
// *  Redistributions in binary form must reproduce the above copyright notice,
//    this list of conditions and the following disclaimer in the documentation
//    and/or other materials provided with the distribution.
//
// *  Neither the name of EPRI nor the names of its contributors may
//    be used to endorse or promote products derived from this software without
//    specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
// IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
// NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
// WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
// OF SUCH DAMAGE.
//
// This EPRI software incorporates work covered by the following copyright and permission
// notices. You may not use these works except in compliance with their respective
// licenses, which are provided below.
//
// These works are provided by the copyright holders and contributors "as is" and any express or
// implied warranties, including, but not limited to, the implied warranties of merchantability
// and fitness for a particular purpose are disclaimed.
//
// This software relies on the following libraries and licenses:
//
// ###########################################################################
// Boost Software License, Version 1.0
// ###########################################################################
//
// * asio v1.10.8 (https://sourceforge.net/projects/asio/files/)
//
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
// 


/** 
 *  \file Console.h
 *  \brief Interface for the Console class
 */

#ifdef __linux__
#include <unistd.h>
#endif
#include "Message.h"
#include "Device.h"
#include "SafeQueue.h"
#include <vector>

/**
 * \brief wrapper class for the parser/lexer code.
 *
 * This class gets text input from the input stream (passed to `run`)
 * and converts into the messages that are sent to the radio.  It also 
 * converts the messages received from the radio into human readable form.
 * (Specifically, replies are rendered as JSON.)
 */
class Console : public Device {
public:
    /// constructor takes references to input and output queues
    Console(SafeQueue<Message> &input, SafeQueue<Message> &output);
    /// destructor is virtual in case class needs to be further derived
    virtual ~Console();
    /// prints passed error message to `std::cerr`
    static void error(std::string &msg);
    /// emits a compound command Message to the output queue
    void compound(uint8_t cmd, std::vector<uint8_t> &data);
    /// emits a compound command Message to the output queue
    void compound(uint8_t cmd, uint8_t data);
    /// emits a simple command Message to the output queue
    void simple(uint8_t cmd);
    /// emits the passed data as Message to the *input* queue
    void selfInput(const std::vector<uint8_t> &data); 
    /// runs the transmit handler (converting text commands to command Messages)
    int runTx(std::istream *in = &std::cin);
    /// runs the receive handler (converting received Messages to JSON text output)
    int runRx(std::ostream *out = &std::cout);
    /// runs both the receive and transmit handlers in required sequence
    int run(std::istream *in, std::ostream *out);
    /// indicates a real "quit" request rather than EOF ended parser
    void quit();
    /// indicates an error causes us to want to restart
    void reset();
    /// sets echo status and returns previous echo state
    bool setEcho(bool echo);
    /// gets quit status
    bool getQuitValue() const;
    /// gets quit status
    bool wantReset() const;

private:
    bool trace_scanning;
    bool trace_parsing;
    bool real_quit;
    bool want_reset;
    bool want_echo;
};

#endif // CONSOLE_H
